name: func-app-test
shortName: funcapptest
version: 1.0.0
ingredients:
  - "@azbake/ingredient-storage@~0"
  - "@azbake/ingredient-apim@~0"
resourceGroup: false
parallelRegions: false
variables:  
  #url: http://petstore.swagger.io/v2/swagger.json
  url: "[apim.get_subscription_key('whilke-poc', 'whilkeApim', 'my-product-sub')]"
recipe:
  test-apim:
    properties:
      type: "@azbake/ingredient-apim"
      source: whilke-poc/whilkeAPIM
      condition: "[coreutils.primary_region()]"
      parameters:
        options:
          apiWaitSeconds: 60 #define how many seconds to wait for any web link (api.data.value or policy.data.value) to return a 2XX response code before handing over to APIM. Defaults to 120
        apis:
          - id: my-api #unique API identifier across APIM
            data:
              apiType: http #unless you're using soap
              path: pets #base apim url for this api
              protocols: #array of http and/or https
                - https
              format: swagger-link-json #using a swagger link the value needs to be a http based json document to download
              serviceUrl: https://pets-default.k8s.hchb.local/ #this will overwrite the backend url for the entire api
              value: "[coreutils.variable('url')]" #value supports bake variables.
            policies: #can apply policies for the entire API, or override at the operation level
              - data: #this policy does not set the operation, so will default to the entire API (operation: base does the same thing)
                  format: xml #we use a non-link format here to embed the policy, but this could have been xml-link and a http address
                  value: "<policies> <inbound /> <backend>    <forward-request />  </backend>  <outbound /></policies>"
              - operation: addPet #override the addPet operation policy
                data:
                  format: xml
                  value: "<policies> <inbound /> <backend>    </backend>  <outbound /></policies>"
        products:
          - id: my-product
            data:
              displayName: My Product Name
              description: My Product
              terms: My terms
              subscriptionRequired: true
              approvalRequired: true
              state: published
            apis:
              - my-api
            groups:
              - Administrators
              - Developers
            subscriptions:
              - id: my-product-sub
                user: Administrator
